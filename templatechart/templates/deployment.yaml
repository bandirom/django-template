apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "templatechart.fullname" . }}
  labels:
    {{- include "templatechart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "templatechart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "templatechart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "templatechart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          env:
            - name: SECRET_KEY
              value: {{ required "Django secret key is required!" .Values.project.secretKey | quote }}
            - name: HEALTH_CHECK_URL
              value: {{ .Values.project.healthCheckUrl }}
            - name: REDIS_URL
              value: {{ default (printf "redis://%s-redis-master:%s" .Release.Name  .Values.redis.port) .Values.redis.host | quote }}
            - name: POSTGRES_HOST
              value: {{ default (printf "%s-postgresql" .Release.Name) .Values.postgresql.host | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.postgresqlDatabase | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.username | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ default (printf "%s-postgresql" .Release.Name) .Values.postgresql.secret | quote }}
                  key: postgresql-password
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 5
            httpGet:
              path: {{ .Values.project.healthCheckUrl }}
              port: http
          readinessProbe:
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 5
            httpGet:
              path: {{ .Values.project.healthCheckUrl }}
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
