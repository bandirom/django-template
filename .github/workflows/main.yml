name: Docker Image CI

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  DOCKER_TAG: "latest"

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: dummy
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Build project
        run: docker-compose build
      - name: flake8
        run: docker-compose run --entrypoint="" web flake8 .
      - name: isort test
        run: docker-compose run --entrypoint="" web isort . --check
      - name: black test
        run: docker-compose run --entrypoint="" web black . --check
      - name: Migration check
        run: docker-compose run --entrypoint="" web python manage.py makemigrations --check
      - name: Tests
        run: docker-compose run --entrypoint="" web python manage.py test
    services:
      postgres:
        image: postgres:12.6-alpine
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_PASSWORD: postgres
  push:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build the Docker image
        id: docker_build
        run: |
          docker-compose -f prod.yml build --pull
          docker-compose -f prod.yml push
