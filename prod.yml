services:
  web:
    image: bandirom/django-template:${DOCKER_TAG:-latest}
    build:
      context: .
      dockerfile: ./docker/prod/web/Dockerfile
    volumes:
      - postgres_socket:/postgres_socket
      - media_files:/app/media/
    ports:
      - "8000:8000"
    environment:
      USE_HTTPS: 0
    env_file:
      - docker/prod/env/.env
      - docker/prod/env/.db.env
      - docker/prod/env/.gunicorn.env
      - docker/prod/env/.data.env
    depends_on:
      - db
      - redis
    restart: always
    networks:
      - separated_network
    healthcheck:
      test: curl --fail -s http://localhost:8000$$HEALTH_CHECK_URL || exit 1
      interval: 1m30s
      timeout: 3s
      retries: 3
    extra_hosts:
      - "gateway-host:172.17.0.1"
  celery:
    image: bandirom/django-template:${DOCKER_TAG:-latest}
    entrypoint: ""
    command: celery -A src worker --beat -l info --schedule=/var/run/celery/celerybeat-schedule
    env_file:
      - docker/prod/env/.env
      - docker/prod/env/.db.env
      - docker/prod/env/.data.env
    depends_on: [redis]
    restart: always
    volumes:
      - postgres_socket:/postgres_socket
    networks:
      - separated_network
    extra_hosts:
      - "gateway-host:172.17.0.1"
  db:
    image: postgres:15.1-alpine
    command: ["-c", "config_file=/etc/postgresql/postgresql.conf"]
    volumes:
      - ./docker/prod/db/pg.conf:/etc/postgresql/postgresql.conf
      - postgres_data:/var/lib/postgresql/data/
      - postgres_socket:/var/run/postgresql/
    env_file:
      - docker/prod/env/.db.env
    restart: always
    networks:
      - separated_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER" ]
      interval: 20s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7-alpine
    restart: always
    networks:
      - separated_network
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 1m20s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
  postgres_socket:
  media_files:

networks:
  separated_network:
    driver: bridge
